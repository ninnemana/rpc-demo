// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vinyltap.proto

package vinyltappb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Album struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Artist               string   `protobuf:"bytes,2,opt,name=artist,proto3" json:"artist,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ReleaseDate          int64    `protobuf:"varint,4,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Songs                []string `protobuf:"bytes,5,rep,name=songs,proto3" json:"songs,omitempty"`
	Tombstoned           bool     `protobuf:"varint,6,opt,name=tombstoned,proto3" json:"tombstoned,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Album) Reset()         { *m = Album{} }
func (m *Album) String() string { return proto.CompactTextString(m) }
func (*Album) ProtoMessage()    {}
func (*Album) Descriptor() ([]byte, []int) {
	return fileDescriptor_b0181488c785c5a2, []int{0}
}

func (m *Album) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Album.Unmarshal(m, b)
}
func (m *Album) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Album.Marshal(b, m, deterministic)
}
func (m *Album) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Album.Merge(m, src)
}
func (m *Album) XXX_Size() int {
	return xxx_messageInfo_Album.Size(m)
}
func (m *Album) XXX_DiscardUnknown() {
	xxx_messageInfo_Album.DiscardUnknown(m)
}

var xxx_messageInfo_Album proto.InternalMessageInfo

func (m *Album) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Album) GetArtist() string {
	if m != nil {
		return m.Artist
	}
	return ""
}

func (m *Album) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Album) GetReleaseDate() int64 {
	if m != nil {
		return m.ReleaseDate
	}
	return 0
}

func (m *Album) GetSongs() []string {
	if m != nil {
		return m.Songs
	}
	return nil
}

func (m *Album) GetTombstoned() bool {
	if m != nil {
		return m.Tombstoned
	}
	return false
}

func init() {
	proto.RegisterType((*Album)(nil), "vinyltap.Album")
}

func init() { proto.RegisterFile("vinyltap.proto", fileDescriptor_b0181488c785c5a2) }

var fileDescriptor_b0181488c785c5a2 = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xb1, 0x6a, 0xc3, 0x30,
	0x14, 0x45, 0x91, 0x5d, 0x19, 0xf7, 0xd5, 0xf5, 0x20, 0x4a, 0xd1, 0x54, 0xd4, 0x4e, 0x82, 0x82,
	0x97, 0x7e, 0x41, 0x4d, 0x3f, 0xc0, 0x68, 0xe8, 0x90, 0x25, 0x48, 0x91, 0x08, 0x02, 0xd9, 0x32,
	0xd6, 0x4b, 0x20, 0x3f, 0x93, 0x6f, 0x0d, 0x76, 0x6c, 0xc8, 0xf6, 0xce, 0x79, 0x5c, 0xb8, 0x17,
	0xea, 0xb3, 0x1f, 0x2e, 0x01, 0xf5, 0xd8, 0x8c, 0x53, 0xc4, 0xc8, 0xca, 0x8d, 0xbf, 0xae, 0x04,
	0xe8, 0x6f, 0x30, 0xa7, 0x9e, 0xd5, 0x90, 0x79, 0xcb, 0x89, 0x20, 0x92, 0xaa, 0xcc, 0x5b, 0xf6,
	0x0e, 0x85, 0x9e, 0xd0, 0x27, 0xe4, 0x99, 0x20, 0xf2, 0x59, 0xad, 0xc4, 0xde, 0x80, 0xa2, 0xc7,
	0xe0, 0x78, 0xbe, 0xe8, 0x3b, 0xb0, 0x4f, 0xa8, 0x26, 0x17, 0x9c, 0x4e, 0x6e, 0x6f, 0x35, 0x3a,
	0xfe, 0x24, 0x88, 0xcc, 0xd5, 0xcb, 0xea, 0xfe, 0x34, 0xba, 0x39, 0x98, 0xe2, 0x70, 0x4c, 0x9c,
	0x8a, 0x7c, 0x0e, 0x2e, 0xc0, 0x3e, 0x00, 0x30, 0xf6, 0x26, 0x61, 0x1c, 0x9c, 0xe5, 0x85, 0x20,
	0xb2, 0x54, 0x0f, 0xa6, 0xfd, 0x86, 0xea, 0x10, 0xfb, 0x66, 0x2b, 0xdc, 0xbe, 0xfe, 0xaf, 0x57,
	0x37, 0x2f, 0xe9, 0xc8, 0x0e, 0xb6, 0xd7, 0x68, 0x4c, 0xb1, 0xcc, 0xfb, 0xb9, 0x05, 0x00, 0x00,
	0xff, 0xff, 0x08, 0x01, 0x01, 0x7b, 0xf0, 0x00, 0x00, 0x00,
}
